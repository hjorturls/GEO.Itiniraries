@{
    ViewBag.Title = "Home Page";
}

<!-- TODO: KRAPP ON BUILD UPDATE HTML FILE IN THE APP FOLDER.
    REMEMBER TO ADD IN ALL JQUERY FILES NEEDED AS WELL AND EXTERNAL SCRIPTS FILES
    -->

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

<div class="jumbotron">
    <h1>GEO Stuff</h1>
</div>

<div id="log">

</div>

<h3>Movies</h3>
<!--TODO: KRAPP AM TRYING TO STYLE FROM HERE: http://montrezorro.github.io/bootstrap-checkbox/ -->
<label class="checkbox-inline">
    <input type="checkbox" id="chkMovies" class="style3" value="option1"> Movies
</label>
<label class="checkbox-inline">
    <input type="checkbox" id="chkTheater" class="style3" value="option2"> Theater
</label>
<label class="checkbox-inline">
    <input type="checkbox" id="chkConcerts" class="style3" value="option3"> Concerts
</label>
<label class="checkbox-inline">
    <input type="checkbox" id="chkSports" class="style3" value="option3"> Sports
</label>
<br />
<label for=radiusSlider>Time:</label>
<input type=range id=timeSlider min=1 max=8 value=8 step=1 list=timeTickmarks onchange="updateTimeOutput(value)">
<datalist id=timeTickmarks>
    <option>1</option>
    <option>2</option>
    <option>3</option>
    <option>4</option>
    <option>5</option>
    <option>6</option>
    <option>7</option>
    <option>8</option>
</datalist>
<output for=timeSlider id=time>Now</output>

<br />

<label for=radiusSlider>Radius:</label>
<input type=range id=radiusSlider min=1 max=8 value=1 step=1 list=radiusTickmarks onchange="updateRadiusOutput(value)">
<datalist id=radiusTickmarks>
    <option>1</option>
    <option>2</option>
    <option>3</option>
    <option>4</option>
    <option>5</option>
    <option>6</option>
    <option>7</option>
    <option>8</option>
</datalist>
<output for=radiusSlider id=radius>100m</output>

<input type="button" id="btnSearch" value="Search" />
<hr />

<div class="row">
    <div id="map-canvas"></div>
</div>

<script>
    function updateTimeOutput(value) {
        var stringValue;
        switch (value) {
            case "1":
                stringValue = "Now";
                break;
            case "2":
                stringValue = "Next 3 Hours";
                break;
            case "3":
                stringValue = "Next 6 Hours";
                break;
            case "4":
                stringValue = "Next 12 Hours";
                break;
            case "5":
                stringValue = "Next Day";
                break;
            case "6":
                stringValue = "Next 3 Days";
                break;
            case "7":
                stringValue = "Next Week";
                break;
            default:
                stringValue = "All";
                break;
        }

        document.querySelector('#time').value = stringValue;
    }

    function updateRadiusOutput(value) {
        document.querySelector('#radius').value = getMeters(value) + 'm';
    }

    function log(value) {
        $('#log').append(value);
    }

    function getHours(value) {
        switch (value) {
            case 1:
                return 1;
            case 2:
                return 3;
            case 3:
                return 6;
            case 4:
                return 12;
            case 5:
                return 24;
            case 6:
                return 72;
            case 7:
                return 168;
            default:
                return 999999;
        }
    };

    function getMeters(value) {
        switch (value) {
            case '1':
                return 100;
            case '2':
                return 250;
            case '3':
                return 500;
            case '4':
                return 1000;
            case '5':
                return 5000;
            case '6':
                return 10000;
            case '7':
                return 15000;
            default:
                return 999999;
        }
    }

    $("#btnSearch").click(function () {
        jQuery.support.cors = true;

        navigator.geolocation.getCurrentPosition(getEvents);

        function getEvents(position) {

            var dataSet = {};

            dataSet.position = position.coords.latitude + ":" + position.coords.longitude;
            dataSet.radiusRange = getMeters(document.getElementById("radiusSlider").value);
            dataSet.hourRange = getHours(document.getElementById("timeSlider").value); 

            var dict = new Object();
            dict["Concerts"] = $("#chkConcerts").is(':checked');
            dict["Movies"] = $("#chkMovies").is(':checked');
            dict["Theater"] = $("#chkTheater").is(':checked');
            dict["Sports"] = $("#chkSports").is(':checked');

            dataSet.categories = dict;

            $.ajax(
                {
                    type: "GET",
                    url: 'http://localhost:57022/events/get',
                    data: dataSet,
                    contentType: "application/json",
                    dataType: "json",
                    success: function (data) {
                        homePosition = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                        map = new google.maps.Map(document.getElementById('map-canvas'), { zoom: 15, center: homePosition });

                        var homeMarker = new google.maps.Marker({
                            position: homePosition,
                            map: map,
                            title: "You are here"
                        });

                        $.each(data["EventModels"], function (i, theItem) {
                            var infowindow = new google.maps.InfoWindow({
                                content: theItem["EventDescription"]
                            });

                            var marker = new google.maps.Marker({
                                position: new google.maps.LatLng(theItem["Venue"]["Latitude"], theItem["Venue"]["Longitude"]),
                                map: map,
                                title: theItem["EventName"]
                            });
                            
                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.open(map, marker);
                            });

                        });

                        var circ = new google.maps.Circle({
                            map: map,
                            radius: dataSet.radiusRange,
                            fillColor: '#008000'
                        });
                        circ.setCenter(homePosition);
                        
                        map.fitBounds(circ.getBounds());

                        // updates markers
                        //google.maps.event.trigger(map, 'dragend');
                    },
                    error: function (msg, url, line) {
                        alert('error trapped in error: function(msg, url, line)');
                        alert('msg = ' + msg + ', url = ' + url + ', line = ' + line);
                    }
                });
        };
    });
</script>
